Angular
    - Front-end framework
        - https://angular.io/guide/architecture
    - used to make dynamic single page applications
        - SPA
            - Single page application
            - design pattern
            - load all of the static resources at once
                - no longer need to fully reload the webpage with another html view
                - inject/removing views and functionality on a webpage rather than requesting a new one 
                    - components
                        - basic building blocks of Angular
        - DI
            - Dependency Injection
    - Angular.js vs Angular
        - Angular.js
            - first iteration of Angular
            - using js
        - Angular
            - any version after Angular.js
            - uses ts
    - Project set up
        - angular.json
            - angular application settings
        - tsconfig.json
            - ts settings (ie: transpiling target)
    - Powerful CLI (command line interface)
        - ng version
        - ng new [app-name]
        - ng serve
            - "serves" our angular project locally on port 4200
            - --open flag (to open the browser automatically)
        - ng test
            - runs tests
                - defined in the spec.ts files
                - Karma and Jasmine
        - ng build
            - build/package app as an artifact to be deployed
            - webpack
                - resource bundler which prepares the application during development/builds
                    - bundle refers to a file that incorporates files that belong together
                    - to be sent to the client in one singular file request
        - ng generate [component | service | module | pipe | ... ] [name]
            - ng g [c | s | ...] [name]
    - Decorators
        - "fancy functions" that provide metadata as parameters
        - Types
            - class, methods, property, ...
        - In Angular, allows us to define the main "elements" of an app
            - @Component
            - @NgModule
            - @Injectable for services
            - @Pipe
    - Components 
        - Building block of Angular
            - used to design the webpage
            - a webpage is built by combining components together
        - when generated, a component is made up of 4 files
            - html: view
            - css: styling
            - ts: functionality
            - spec.ts: testing
        - @Component decorator 
            - selector
                - how to reference the component elsewhere
            - template
                - defines the html template
            - style
                - styling for that component
    - Importing bootstrap
        - npm install bootstrap
        - add path to dependency in styles and script in angular.json
            "styles": [
              "src/styles.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css"
            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.bundle.min.js"
            ]
    - Modules
        - groups of related components
        - at least one module 
            - by default AppModule, which is the root module     
                - convention, could rename if wanted to   
        - @NgModule decorator
            - define 4 properties
                - declarations: declaring components associated with the module
                - imports: import additional modules (ie: routing)
                - providers: definining services associated with the modules
                - bootstrap: defining the root component for the module
    - Routing
        - allows us to swap components dynamically based on the url path of the application
        - routing module
            - contains predefined routes to be mapped to components
        - define paths to navigate to using the routerLink attribute
            - ie: routerLink = "users"
            - NOTE:
                - do not use href attribute or it will reload the page
        - <router-outlet></router-outlet>
            - where components are injected